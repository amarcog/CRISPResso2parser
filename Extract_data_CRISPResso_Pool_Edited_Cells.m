%Your current folder must contain the main folder 
%containing subfolders of CRISPResso Results.
%Type in command Window the main folder.

prompt = 'Which folder contains subfolders with CRISPResso results? ';
expFolder = input(prompt,'s');
cd(expFolder);
    
%First Matlab moves all html files to a new folder html
    
testhtml = dir('*.html');
testhtml2 = numel(testhtml);

if testhtml2 > 0
mkdir html
movefile *.html html
end

%Matlab defines the list of CRISPResso Results subfolders 
    
FolderList = dir(['.' '/CRISP*']);

%The next loop iterates the extraction of the following data
%from each subfolder:

%·Total aligned reads from the CRISPResso_mapping_statistics.txt

%·The inframe and frameshift mutations reads from Frameshift_analysis.txt

%·Total unModified and modified reads from the 
%CRISPResso_quantification_of_editing_frequency.txt

for i=1:numel(FolderList)
    
    cd(FolderList(i).name)
    
    FilenameS = ['CRISPResso_mapping_statistics.txt'];
    FilenameF = ['Frameshift_analysis.txt'];
    FilenameQ = ['CRISPResso_quantification_of_editing_frequency.txt'];


    %Now matlab is going to check if the needed data files are present
    %in the current subfolder. Depending of the CRISPResso analysis mode
    %and succes there are 3 conditions:

    ExistenceFRAME = exist (FilenameS);
    ExistenceSIMAP = exist (FilenameF);
    TotalExist = ExistenceFRAME + ExistenceSIMAP;

    %1.- Successful analysis when coding sequence is provided 
    %to CRISPResso. All files CRISPResso_mapping_statistics.txt, 
    %Frameshift_analysis.txt and 
    %CRISPResso_quantification_of_editing_frequency.txt are generated by
    %CRISPResso.

    if TotalExist == 4

    %textscan generates variables which
    %contain in their boxes the isolated values of interest.

    fileID = fopen(FilenameF);
    Mutationsarray = textscan(fileID,'%s', 'Delimiter',': ');

    fileID = fopen(FilenameS);
    Readsarray = textscan(fileID,'%s', 'Delimiter','\t');
    
    fileID = fopen(FilenameQ);
    Editing_Quantification = textscan(fileID,'%s', 'Delimiter','\t');

    %Matlab fixes Alignedreads, UnModified_reads, InFrameMutations, 
    %FrameshiftMutations and Modified read calling the boxes containing 
    %the values of interest.

    Alignedreads{i} = Readsarray{1, 1}{10, 1};
    InFrameMutations{i} = Mutationsarray{1, 1}{9, 1};
    FrameshiftMutations{i} = Mutationsarray{1, 1}{13, 1};
    UnModified_reads{i} = Editing_Quantification{1,1}{24,1};
    Modified_reads{i} = Editing_Quantification{1,1}{25,1};

    end
    
    %2.-Successful analysis when coding sequence is NOT
    %provided to CRISPResso. Only CRISPResso_mapping_statistics.txt and 
    %CRISPResso_quantification_of_editing_frequency.txt are generated by
    %CRISPResso.

    if TotalExist == 2
    
    fileID = fopen(FilenameS);
    Readsarray = textscan(fileID,'%s', 'Delimiter','\t');
    
    fileID = fopen(FilenameQ);    
    Editing_Quantification = textscan(fileID,'%s', 'Delimiter','\t');

    %Matlab fixes Alignedreads, UnModified_reads and Modified reads
    %by calling the boxes containing the values of interest.
    %InFrameMutations and FrameshiftMutations 
    %are asigned with NaN because they are NOT calculated by CRISPResso.

    Alignedreads{i} = Readsarray{1, 1}{11, 1};
    InFrameMutations{i} = 'NaN';
    FrameshiftMutations{i} = 'NaN';
    UnModified_reads{i} = Editing_Quantification{1,1}{24,1};
    Modified_reads{i} = Editing_Quantification{1,1}{25,1};
    
    end

    %3.-NOT Successful analysis. Any of the needed files
    %are generated by CRISPResso.

    %Matlab fixes Alignedreads, UnModified_reads, 
    %Modified_reads, InFrameMutations and FrameshiftMutations 
    %with NaN because in these case are NOT calculated by CRISPResso.

    if TotalExist == 0
    
    Alignedreads{i} = 'NaN';
    InFrameMutations{i} = 'NaN';
    FrameshiftMutations{i} = 'NaN';
    UnModified_reads{i} = 'NaN';
    Modified_reads{i} = 'NaN';
    
    
    end
    

%Then matlab exits the subfolder to start in the next one.

fclose('all')

cd ..

end

%Finally Matlab calculates:
%Percentage of reads: Un-modified, modified, with Frameshift mutations
% and with In-Frame mutations.
%Commands as str2num char are used to make variables compatible for 
%math operations.
%char transforms cell to character string and str2num transform to number.

for i = 1:numel(FolderList)
    
    FS_percentage(i) = (str2num(char(FrameshiftMutations(i)))...
        /str2num(char(Alignedreads(i)))) * 100;

    IF_percentage(i) = (str2num(char(InFrameMutations(i)))...
        /str2num(char(Alignedreads(i)))) * 100;
    
    UnMod_percentage(i) = (str2num(char(UnModified_reads(i)))...
        /str2num(char(Alignedreads(i)))) * 100;
    
    Mod_percentage(i) = (str2num(char(Modified_reads(i)))...
        /str2num(char(Alignedreads(i)))) * 100;

end

%Finally, matlab builds a table that writes everything in a excel file
%(.xlsx file)

TableMyseqExperiments = table(char(FolderList(1:numel(FolderList)).name),...
    char(Alignedreads{1,:}),...
    char(FrameshiftMutations),...
    char(InFrameMutations), transpose(UnModified_reads),...
    transpose(Modified_reads), ...
    transpose(FS_percentage), transpose(IF_percentage), ...
    transpose(UnMod_percentage),transpose(Mod_percentage))

TableMyseqExperiments.Properties.VariableNames = {'Sample' ...
    'Aligned_Reads' 'Frameshift_Mutations' 'InFrame_Mutations' ...
    'UnModified_Reads' 'Modified_reads' ...
    'Percentage_FSmut' 'Percentage_IFmut' ...
    'Percentage_UnMod' 'Mod_percentage'}

writetable(TableMyseqExperiments,[expFolder '.xlsx'])

clear

cd ..

